---
import InlineCodeBlock from "../../../components/articles/code-block/InlineCodeBlock.astro";

export const partial = true;
---

<p>
  <strong
    >¡NO SE OLVIDEN DE ARMAR EL .gitignore para excluir todo lo que no quieren
    commitear!</strong
  >
  Veo un node_modules pusheado y se llevan la materia automáticamente.
</p>
<p>
  Este TP, obviamente, usa SoqueTIC. Para instalarlo, pueden hacerlo igual que
  cualquier otra librería usando npm:
  <code class="language-bash">npm i soquetic</code>
</p>
<h2>Consigna Base</h2>
<p>
  Seguimos desarrollando la aplicación para "Los Pelados". En este caso,
  contamos con un frontend hecho, preparado para usar soquetic.
  <strong>Usen el ejercicio anterior de guía</strong>. Construir un backend en
  Node JS usando soquetic que responda a 3 eventos:
</p>
<ul>
  <li>
    <em>"sabores"</em>: Devolver la lista de todos los sabores, que se encuentra
    en data/sabores.json.
  </li>
  <li>
    <em>"productos"</em>: Devolver la lista de todos los productos, que se
    encuentra en data/productos.json.
  </li>
  <li>
    <em>"pedido"</em>: Recibe un pedido en forma de objeto, se debe guardar en
    la lista de objetos que se encuentra data/pedidos.json.
    <strong>Debe retornar un objeto</strong> que contenga el atributo
    <code class="language-javascript">ok</code> con el valor
    <code class="language-javascript">true</code> si el pedido fue guardado correctamente,
    o <code class="language-javascript">false</code> si no se pudo guardar. Por ejemplo
    se envía el objeto
    <InlineCodeBlock lang="js" code={`{ok:true}`} /> si se guardó correctamente.
  </li>
</ul>
<p>
  <strong>No se olviden</strong> de iniciar el servidor con
  <code class="language-javascript">startServer</code>. Por defecto se
  inicializa en el puerto 3000.
</p>
<p>
  Levantar el frontend y probar que anda. Para ejecutar el frontend, como usa
  SoqueTIC, no alcanza con abrir el html, hay que usar LiveServer.
  Googleen/pregunten, es una buena herramienta independientemente de que es
  obligatorio para este tp.
</p>
<h2>Consigna Manija</h2>
<p>
  Hacer un pequeño frontend (HTML + JS) que le consulte al backend por los
  pedidos hechos y los muestre. Van a tener que agregarle funcionalidad al
  backend par cumplir con esto. Pueden hacerlo en modo fiaca y hacer simplemente
  un <code class="language-javascript">console.log</code> de lo obtenido en el backend.
</p>
<h2>Consigna Manija II</h2>
<p>
  Hacerle las modificaciones necesarias al backend y al frontend para permitir
  más de un producto por cliente.
</p>
