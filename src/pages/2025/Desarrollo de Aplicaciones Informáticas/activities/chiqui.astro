---
import ImportantBox from "../../../../components/articles/alertbox/ImportantBox.astro";
import CodeBlock from "../../../../components/articles/code-block/CodeBlock.astro";

export const partial = true;
---

<div class="hidden md:block">
  <div
    style="position: relative; width: 100%; height: 0; padding-top: 56.2500%;
 padding-bottom: 0; box-shadow: 0 2px 8px 0 rgba(63,69,81,0.16); margin-top: 1.6em; margin-bottom: 0.9em; overflow: hidden;
 border-radius: 8px; will-change: transform;"
  >
    <iframe
      loading="lazy"
      style="position: absolute; width: 100%; height: 100%; top: 0; left: 0; border: none; padding: 0;margin: 0;"
      src="https://www.canva.com/design/DAFg-HkcliE/view?embed"
      allowfullscreen="allowfullscreen"
      allow="fullscreen"
    >
    </iframe>
  </div>
</div>
<h2>Instalación</h2>
<p>
  Para correr el tp, necesitamos una librería de estadística para simular los
  partidos. Se instala con:
</p>
<pre><code class="language-bash">pip install --user scipy
</code></pre>
<h2>Objetivo</h2>
<p>
  El Chiqui nos pidio analizar distintos sistemas de competencia en el fútbol.
  En particular, nos interesa comparar un sistema de liga (todos contra todos)
  contra un sistema de llaves por eliminación. Para esto, vamos a armar
  funciones que simulen cada tipo de torneo, y vamos a armar experimentos que
  testeen hipótesis sobre cada tipo.
</p>
<h2>Equipos</h2>
<p>
  A los equipos los vamos a modelar con dos números entre 0 y 1, que van
  representar su ataque y defensa respectivamente. A mayor número, mejor el
  ataque o defensa. Los equipos entonces van a ser tuplas o listas con 3
  elementos: el nombre, la probabilidad de ataque y la probabilidad de defensa.
  Por ejemplo
</p>
<pre><code class="language-python">(&quot;Deportivo Riestra&quot;,0.6,0.4)
</code></pre>
<h2 id="partidos">Partidos</h2>
<p>
  Para simular los partidos, yo les voy a proveer dos funciones que son
  probabilísticas.
</p>
<ul>
  <li>
    <code>simular_partido</code>: Toma 2 equipos y devuelve el resultado en
    goles (basado en los ataques y defensas)
  </li>
  <li>
    <code>penales</code>: Toma 2 equipos y devuelve el resultado en goles
    (basado en los ataques y defensas) de patear 5 penales por equipo.
    Opcionalmente, se le puede pasar un tercer parámetro, <code>cantidad</code>,
    que es la cantidad de penales por equipo.
  </li>
</ul>
<h2 id="liga">Liga</h2>
<p>
  En una liga, todos los equipos juegan con todos los otros 1 sola vez (sin
  vuelta). Los partidos se juegan con la función <code>simular_partido</code>.
  Suman 3 puntos si ganan, 1 si empatan y 0 si pierden. El campeón es quien al
  final de todos los partidos, tiene más puntos. Si hay dos con igual cantidad
  de puntos, gana el que mayor diferencia de goles (<code
    >golesMetidos - golesRecibidos</code
  >) y si perisiste el empate, quien tiene más. Hay una función auxiliar que les
  puede ayudar a determinar el campeón de un torneo. Las tablas de un torneo
  tienen la forma:
</p>
<table>
  <thead>
    <tr>
      <th>Nombre</th>
      <th>Puntos</th>
      <th>Goles a Favor</th>
      <th>Goles en Contra</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>River</td>
      <td>27</td>
      <td>26</td>
      <td>10</td>
    </tr>
    <tr>
      <td>Argentinos Jrs.</td>
      <td>26</td>
      <td>25</td>
      <td>14</td>
    </tr>
    <tr>
      <td>Barracas Central</td>
      <td>26</td>
      <td>20</td>
      <td>15</td>
    </tr>
    <tr>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
  </tbody>
</table>
<p>
  Que en python lo vamos a representar como lista de listas. Pueden usar otras
  estructuras, pero al momento de llamar la función
  <code>ordenar_tabla</code> debe ser una lista de listas.
</p>
<h2 id="llaves">Llaves</h2>
<p>
  Asumiendo que la cantidad de equipos es una potencia de 2 (4,8,16,32,etc), se
  realizan partidos de a pares de equipos, en donde se determina un ganador que
  pasa a la siguiente ronda. Esto se repite hasta llegar a un único equipo, que
  es el ganador. Como en cada partido no puede haber empate, se define de la
  siguiente manera:
</p>
<ol>
  <li>Se simulan el partido con <code>simular_partido</code>.</li>
  <li>
    Si no hay un ganador, se juegan una ronda de penales. Una ronda son 5
    penales por equipo usando la función <code>penales</code>.
  </li>
  <li>
    Si sigue sin haber un ganador, se va un penal por eliminación, es decir, 1
    penal por equipo hasta que se defina un ganador. Se puede usar la función
    <code>penales</code> con <code>cantidad = 1</code>.
  </li>
</ol>
<h2 id="consigna">Consigna</h2>
<h3 id="parte-a-por-el-6">Parte A: Por el 6</h3>
<p>
  Realizar una función que, dado un conjunto de equipos, simule un campeonato de
  liga siguiendo las indicaciones descritas anteriormente, y devuelva la tabla
  de resultados <strong>ordenada por puntaje</strong>. Hay funciones para
  ordenar una tabla de posiciones. Probar que funcione.
</p>
<h3 id="parte-b-por-el-8">Parte B: Por el 8</h3>
<p>
  Realizar una función que, dado un conjunto de equipos, simule un campeonato de
  llaves siguiendo las indicaciones descritas anteriormente, y devuelva
  <strong>el equipo ganador</strong>. Probar que funcione.
</p>
<h3 id="parte-c-por-el-9">Parte C: Por el 9</h3>
<p>
  Ahora, hagamos la copa de liga argentina, que es una mezcla de los dos
  sistemas. Funciona de la siguiente forma:
</p>
<ol>
  <li>
    Se hacen 2 grupos de 14 equipos, en donde juegan todos contra todos 1
    partido (igual que la Parte A)
  </li>
  <li>
    El top 4 de cada grupo juega luego un torneo de llaves por eliminación.
    Quien juega contra quien está determinado por el orden en que salieron en
    las mini ligas.
  </li>
</ol>
<p>
  Obviamente pueden (y se espera) que reutilicen las funciones de la parte A y
  B. Probar que funcione. Para más información, <strong>Googleen</strong>.
</p>
<h3>Parte D: Por el 10</h3>
<p>
  Con los siguientes equipos, ejecutar 500 veces tanto el torneo de llaves como
  torneo de liga. Contabilizar los ganadores, es decir, contar cuantas veces
  ganó cada equipo en cada sistema. <strong
    >Cuenten por separado los ganadores de la liga de los ganadores de las
    llaves</strong
  >.
</p>
<CodeBlock
  lang="python"
  code={'equipos = [("Colón",0.8,0.75), ("Ferro",0.7,0.65), ("Defensores de Belgrano",0.75,0.7), ("Quilmes",0.6,0.6), ("All Boys",0.5,0.6), ("Chacarita",0.4,0.45), ("Arsenal",0.4,0.3), ("Chaco For Ever",0.3,0.4)]'}
/>
<p>
  Luego de correr ambos sistemas 500 veces y contar los ganadores, responder
  como comentarios al final del código las siguientes preguntas:
</p>
<ol>
  <li>
    ¿Ganaron los mismos equipos en ambos sistemas? ¿O hay equipos que les va
    mejor en un sistema que el otro?
  </li>
  <li>
    ¿Cómo les va a los equipos chicos (de menor ataque y defensa) en ambos
    sistemas?
  </li>
  <li>¿Podrían concluir algo de la comparación entre ambos sistemas?</li>
</ol>
<h2>Entrega</h2>
<p>
  La entrega se hace pusheando al repositorio creado por github classroom, y
  enviando el hash del commit en una entrega del campus.
</p>
<h2>Evaluación</h2>
<p>
  Se va a evaluar por código funcional y legible para otras personas.
  <strong>Hay reentrega</strong>. En la reentrega pueden corregir y agregar
  partes. La nota depende de lo que hayan llegado a hacer:
</p>
<ul>
  <li>6: Parte A</li>
  <li>8: Partes A y B</li>
  <li>9: Partes A, B y C</li>
  <li>10: Partes A, B, C y D</li>
</ul>
<ImportantBox>
  <p>
    Para tener la actividad entregada, tienen que pushear y entregar el hash del
    commit. Si faltan cualquiera de las 2 cosas no se los voy a poder corregir y
    van a tener un uno hasta que reentreguen.
  </p>
</ImportantBox>
