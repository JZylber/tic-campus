---
import Loader from "../../loader/Loader.astro";
import SectionLayout from "../SectionLayout.astro";
import Article from "./Article.astro";

interface Props {
  subject: string;
  course: string;
}

const { subject, course } = Astro.props;
---

<SectionLayout name="actividades">
  <div
    class="h-full w-full"
    x-data="{ unitsData: [], loading: true, currentContent: null, articleOpen: false, articleURL:''}"
    x-init={`unitsData = await getSubjectData('${course}', '${subject}'); loading = false;`}
  >
    <div x-show="!loading" class="flex flex-col gap-y-4">
      <h1 class="text-[36px] font-bold text-center p-4">Actividades</h1>
      <template x-for="unit in unitsData" :key="unit.order">
        <div
          class="border-2 border-gray-300 p-4 rounded-xl"
          x-data="{ open: false }"
        >
          <div
            class="flex justify-between items-center cursor-pointer"
            x-on:click="open = !open"
          >
            <div class="text-[24px] font-bold">
              <span x-text="`Unidad ${unit.order}: `"></span><span
                x-text="unit.name"></span>
            </div>
            <span
              class="material-symbols-outlined text-[36px] transition-transform"
              x-bind:class="{'rotate-90': open}"
            >
              chevron_right
            </span>
          </div>
          <div x-show="open" class="flex flex-col gap-y-2 py-4" x-transition>
            <template x-for="content in unit.contents">
              <div
                class="cursor-pointer border-l-4 border-gray-50 px-4 hover:border-sh-purple inline-flex items-baseline"
                x-on:click={`(() => {
                currentContent = content;
                if(content.textURL.startsWith('https:')){
                  window.open(content.textURL, '_blank');
                } else {
                  articleOpen = true; 
                  articleURL =  $store.baseURL.dataURL + '/${subject}/activities/' + content.textURL;}
                })()`}
              >
                <span
                  class="material-symbols-outlined text-[24px] self-center"
                  x-text="(()=>{switch(content.type) {
                          case 'Actividad': return 'psychology';
                          case 'Trabajo Práctico': return 'help';
                          case 'Encuesta': return 'checklist';
                          case 'Recuperatorio': return 'redo';
                          default: return 'description';
                        }})()"
                >
                </span>
                <span
                  class="font-semibold text-[20px] ml-4 w-2/5"
                  x-text="content.name"></span>
                <span class="italic text-[16px]" x-text="content.topic"></span>
                <template
                  x-if={`['Actividad','Trabajo Práctico','Encuesta'].includes(content.type) && $store.student.course === '${course}'`}
                >
                  <span
                    class="material-symbols-outlined text-[24px] ml-auto self-center"
                    x-data="{ passed: false, pending: true, redo: false }"
                    x-text="(()=>{if(pending || redo) {return 'pending'} else if(passed) {return 'check_circle'} else {return 'cancel'}})()"
                    x-bind:class="(()=>{if(pending) {return 'text-gray-400'}else if(redo){return 'text-sh-yellow'} else if(passed) {return 'text-sh-green'} else {return 'text-sh-red'}})()"
                    x-effect="
                          if(content.type === 'Actividad') {
                            const results = $store.student.activities.find(activity => activity.id === content.id);
                            if(results) {
                              passed = results.done;
                              pending = false;
                              redo = results.inRevision;
                            }}
                            else if(content.type === 'Trabajo Práctico') {
                              const results = $store.student.marks.find(mark => mark.id === content.id);
                              const specialActivity = $store.student.activities.find(activity => activity.id === content.id);
                              if(results) {
                                passed = results.mark >= 6;
                                pending = false;
                                redo = results.inRevision;
                              }
                              else if(specialActivity) {
                                passed = specialActivity.done;
                                pending = false;
                                redo = specialActivity.inRevision;
                              }
                            }
                          
                            "
                  >
                  </span>
                </template>
              </div>
            </template>
          </div>
        </div>
      </template>
      <Article
        content="currentContent"
        articleURL="articleURL"
        open="articleOpen"
        course={course}
      />
      <Loader show="loading" />
    </div>
  </div>
</SectionLayout>
